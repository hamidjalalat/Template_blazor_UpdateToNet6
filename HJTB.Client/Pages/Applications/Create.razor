@page "/Application/Create"

@using ViewModels.Applications;
@inject NavigationManager NavigationManager
@inject Services.ApplicationService ApplicationService

<h3>Application</h3>

<br>
<EditForm Model="Model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
  
    <div class="form-horizontal">
        <div class="form-group row">
            <div class="col-md-1">
                <label for="Username" class="control-label col-md-4">نام </label>
              </div>
            <div class="col-md-11">
                <input id="Username" name="Username" class="form-control" @bind="Model.Name" />
                <div class="form-control-validation">
                    <ValidationMessage For="() => Model.Name" />
                </div>
            </div>
        </div>
        <br>

        <div class="form-group row">
            <div class="col-md-1">
                <label for="Username" class="control-label col-md-4">توضیح </label>
                </div>
            <div class="col-md-11">
                <input id="Username" name="Username" class="form-control" @bind="Model.Description" />
                <div class="form-control-validation">
                    <ValidationMessage For="() => Model.Description" />
                </div>
            </div>

        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">ذخیره</button>

        </div>
    </div>
</EditForm>
<Toasts class="p-3" Messages="messages" AutoHide="true" StackLength="3" Placement="ToastsPlacement.BottomRight" />

@code {

    public CreateViewModel Model = new CreateViewModel();

    public string Message { get; set; }

    private async Task Submit()
    {
        var Result = await ApplicationService.PostAsync(Model);

        if (Result.IsSuccessful)
        {
            ShowMessageSucc(ToastType.Primary);
        }
        else
        {
            ShowMessageFail(ToastType.Danger);
        }
    
    }
    List<ToastMessage> messages = new List<ToastMessage>();

    private void ShowMessageSucc(ToastType toastType) 
    {
        messages.Add(CreateToastMessageSucc(toastType));
    }

    private ToastMessage CreateToastMessageSucc(ToastType toastType)
    {
    return new ToastMessage
        {
            Type = toastType,
            Title = "عنوان پیام",
            HelpText = $"{DateTime.Now}",
            Message = "عملیات درج با موفقیت انجام شد",
        };
    }
    private void ShowMessageFail(ToastType toastType) => messages.Add(CreateToastMessageFail(toastType));

    private ToastMessage CreateToastMessageFail(ToastType toastType)
    {
        return new ToastMessage
        {
            Type = toastType,
            Title = "عنوان پیام",
            HelpText = $"{DateTime.Now}",
            Message = "عملیات درج با شکست مواجه شد",
        };
    }
}

